!function(){"use strict";const e=document.querySelector(".profile__edit-button"),t=document.querySelector(".profile__add-button"),s={inputSelector:".form__input",submitButtonSelector:".form__button",inactiveButtonClass:"form__button_disabled",inputErrorClass:"form__input_type_error",errorClass:"form__error_visible"},n=document.querySelector(".popup__form_type_profile"),o=document.querySelector(".profile"),r=(o.querySelector(".profile__name"),o.querySelector(".profile__title"),n.querySelector(".form__input_type_profile-name")),i=n.querySelector(".form__input_type_profile-title"),l=document.querySelector(".popup__form_type_add-place");function a(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}document.querySelector(".popup_type_add-place"),document.querySelector(".popup_type_image-prev"),document.querySelector(".cards").querySelector(".cards__list");class c{constructor(e){a(this,"_handleEscClose",(e=>{"Escape"===e.key&&this.close()})),a(this,"_handleOverlayClose",(e=>{e.target.classList.contains("popup")&&this.close()})),this._popupElement=document.querySelector(e),this.close=this.close.bind(this)}open(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose),document.addEventListener("click",this._handleOverlayClose)}close(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose),document.removeEventListener("click",this._handleOverlayClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}_handleOverlayClose(e){e.target.classList.contains("popup")&&this.close()}setEventListeners(){this._popupElement.querySelector(".popup__close-button").addEventListener("click",this.close)}}class u extends c{constructor(e,t){var s,n;super(e),n=()=>{super.close()},(s="close")in this?Object.defineProperty(this,s,{value:n,enumerable:!0,configurable:!0,writable:!0}):this[s]=n,this._formElement=this._popupElement.querySelector(".popup__form"),this._submitHandler=t}_getInputValues(){this._inputList=[...this._formElement.querySelectorAll(".form__input")];const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){this._formElement.addEventListener("submit",(e=>{e.preventDefault(),this._submitHandler(this._getInputValues()),this._formElement.reset(),this.close()})),super.setEventListeners()}}class _{constructor(e,t){this._form=t,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass}_showInputError(e){const t=this._form.querySelector(".".concat(e.id,"-error"));t.textContent=e.validationMessage,t.classList.add(this._errorClass),e.classList.add(this._inputErrorClass)}_hideInputError(e){const t=this._form.querySelector(".".concat(e.id,"-error"));t.textContent="",t.classList.remove(this._errorClass),e.classList.remove(this._inputErrorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInputs(){return this._inputList.some((e=>!e.validity.valid))}_disableButton(){this._button.disabled=!0,this._button.classList.add(this._inactiveButtonClass)}enableButton(){this._button.disabled=!1,this._button.classList.remove(this._inactiveButtonClass)}_toggleButton(){this._hasInvalidInputs()?this._disableButton():this.enableButton()}_setEventListeners(){this._inputList=[...this._form.querySelectorAll(this._inputSelector)],this._button=this._form.querySelector(this._submitButtonSelector),this._toggleButton(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButton()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>e.preventDefault())),this._setEventListeners()}resetFormButton(){this._disableButton()}hideErrors(){this._inputList.forEach((e=>{this._hideInputError(e)}))}}class p{constructor(e,t,s){this._text=e.name,this._link=e.link,this._selector=t,this._handleCardClick=s}_getCloneFromTemplate(){return document.querySelector(this._selector).content.querySelector(".card").cloneNode(!0)}_handleLikeButton(e){e.target.classList.toggle("card__like-button_active")}_setEventListeners(){this._element.addEventListener("click",(e=>{e.target===this._likeButton&&this._handleLikeButton(e),e.target===this._deleteButton&&e.currentTarget.remove(),e.target===this._image&&this._handleCardClick(e)}))}generateCard(){return this._element=this._getCloneFromTemplate(),this._image=this._element.querySelector(".card__image"),this._likeButton=this._element.querySelector(".card__like-button"),this._deleteButton=this._element.querySelector(".card__delete-button"),this._element.querySelector(".card__title").textContent=this._text,this._image.src=this._link,this._image.alt="A beautiful scene in ".concat(this._text),this._setEventListeners(),this._element}}const d=new class{constructor(e,t){let{items:s,renderer:n}=e;this._items=s,this._renderer=n,this._container=document.querySelector(t)}render(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://code.s3.yandex.net/web-code/yosemite.jpg"},{name:"Lake Louise",link:"https://code.s3.yandex.net/web-code/lake-louise.jpg"},{name:"Bald Mountains",link:"https://code.s3.yandex.net/web-code/bald-mountains.jpg"},{name:"Latemar",link:"https://code.s3.yandex.net/web-code/latemar.jpg"},{name:"Vanoise National Park",link:"https://code.s3.yandex.net/web-code/vanoise.jpg"},{name:"Lago di Braies",link:"https://code.s3.yandex.net/web-code/lago.jpg"}],renderer:e=>h(e)},".cards__list");function h(e){const t=function(e){return new p(e,"#card-template",(()=>{E.open(e.link,e.name)})).generateCard()}(e);d.addItem(t)}d.render();const m=new _(s,n),y=new _(s,l);m.enableValidation(),y.enableValidation();const b=new class{constructor(e){let{nameSelector:t,jobSelector:s}=e;this._profileName=document.querySelector(t),this._profileJob=document.querySelector(s)}getUserInfo(){return{name:this._profileName.textContent,job:this._profileJob.textContent}}setUserInfo(e,t){this._profileName.textContent=e,this._profileJob.textContent=t}}({nameSelector:".profile__name",jobSelector:".profile__title"}),f=new u(".popup_type_edit-profile",(e=>{b.setUserInfo(e.name,e.title)}));f.setEventListeners();const v=new u(".popup_type_add-place",(e=>{h(e),y.resetFormButton()}));v.setEventListeners();const E=new class extends c{constructor(e){super(e)}open(e,t){this._popupImage=this._popupElement.querySelector(".popup__image"),this._popupImage.src=e,this._popupImage.alt="A beautiful view of ".concat(t),this._popupElement.querySelector(".popup__caption").textContent=t,super.open()}}(".popup_type_image-prev");E.setEventListeners(),e.addEventListener("click",(()=>{const e=b.getUserInfo();r.value=e.name,i.value=e.job,m.hideErrors(),m.enableButton(),f.open()})),t.addEventListener("click",(()=>{v.open(),y.hideErrors()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,