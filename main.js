!function(){"use strict";const e=document.querySelector(".profile__edit-button"),t=document.querySelector(".profile__add-button"),s={inputSelector:".form__input",submitButtonSelector:".form__button",inactiveButtonClass:"form__button_disabled",inputErrorClass:"form__input_type_error",errorClass:"form__error_visible"},r=document.querySelector(".popup__form_type_profile"),i=r.querySelector(s.submitButtonSelector),n=document.querySelector(".profile"),o=(n.querySelector(".profile__name"),n.querySelector(".profile__title"),r.querySelector(".form__input_type_profile-name")),a=r.querySelector(".form__input_type_profile-title"),l=document.querySelector(".popup__form_type_add-place"),c=(document.querySelector(".popup_type_add-place"),document.querySelector(".popup_type_image-prev"),document.querySelector(".profile__image-container")),_=document.querySelector(".popup__form_type_avatar"),h=_.querySelector(s.submitButtonSelector),d=l.querySelector(s.submitButtonSelector),u=document.createElement("img"),p=document.querySelector(".profile__image-container");function m(e,t){e.textContent=t}function v(e,t){e.reset(),t.close()}function f(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class C{constructor(e){f(this,"_handleEscClose",(e=>{"Escape"===e.key&&this.close()})),f(this,"_handleOverlayClose",(e=>{e.target.classList.contains("popup")&&this.close()})),this._popupElement=document.querySelector(e),this.close=this.close.bind(this)}open(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose),document.addEventListener("click",this._handleOverlayClose)}close(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose),document.removeEventListener("click",this._handleOverlayClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}_handleOverlayClose(e){e.target.classList.contains("popup")&&this.close()}setEventListeners(){this._popupElement.querySelector(".popup__close-button").addEventListener("click",this.close)}}class b extends C{constructor(e,t){var s,r;super(e),r=()=>{super.close()},(s="close")in this?Object.defineProperty(this,s,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[s]=r,this._formElement=this._popupElement.querySelector(".popup__form"),this._submitHandler=t}_getInputValues(){this._inputList=[...this._formElement.querySelectorAll(".form__input")];const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){this._formElement.addEventListener("submit",(e=>{e.preventDefault(),this._submitHandler(this._getInputValues())})),super.setEventListeners()}}class k{constructor(e,t){this._form=t,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass}_showInputError(e){const t=this._form.querySelector(".".concat(e.id,"-error"));t.textContent=e.validationMessage,t.classList.add(this._errorClass),e.classList.add(this._inputErrorClass)}_hideInputError(e){const t=this._form.querySelector(".".concat(e.id,"-error"));t.textContent="",t.classList.remove(this._errorClass),e.classList.remove(this._inputErrorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInputs(){return this._inputList.some((e=>!e.validity.valid))}_disableButton(){this._button.disabled=!0,this._button.classList.add(this._inactiveButtonClass)}enableButton(){this._button.disabled=!1,this._button.classList.remove(this._inactiveButtonClass)}_toggleButton(){this._hasInvalidInputs()?this._disableButton():this.enableButton()}_setEventListeners(){this._inputList=[...this._form.querySelectorAll(this._inputSelector)],this._button=this._form.querySelector(this._submitButtonSelector),this._toggleButton(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButton()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>e.preventDefault())),this._setEventListeners()}resetFormButton(){this._disableButton()}hideErrors(){this._inputList.forEach((e=>{this._hideInputError(e)}))}}class y{constructor(e,t,s,r){let{handleCardClick:i,handleDeleteCard:n,handleLikeCard:o}=s;this._text=e.name,this._link=e.link,this._selector=t,this._handleCardClick=i,this._handleDeleteCard=n,this._handelLikeCard=o,this._id=e._id,this._userId=r,this._ownerId=e.owner._id,this._likes=e.likes}_getCloneFromTemplate(){return document.querySelector(this._selector).content.querySelector(".card").cloneNode(!0)}_handleLikeButton(e){e.target.classList.toggle("card__like-button_active"),this._handelLikeCard(this._id)}_setEventListeners(){this._element.addEventListener("click",(e=>{e.target===this._likeButton&&this._handleLikeButton(e),e.target===this._deleteButton&&this._handleDeleteCard(this._id),e.target===this._image&&this._handleCardClick(e)}))}removeCard(){this._element.remove(),this._element=null}likeCard(e){this._likeButton.classList.add("card__like-button_active"),this._likes=e,this._likeCount.textContent=this._likes.length}dislikeCard(e){this._likeButton.classList.remove("card__like-button_active"),this._likes=e,this._likeCount.textContent=this._likes.length}isLiked(){return this._likes.some((e=>e._id===this._userId))}generateCard(){return this._element=this._getCloneFromTemplate(),this._image=this._element.querySelector(".card__image"),this._likeButton=this._element.querySelector(".card__like-button"),this._element.querySelector(".card__title").textContent=this._text,this._image.src=this._link,this._image.alt="A beautiful scene in ".concat(this._text),this._deleteButton=this._element.querySelector(".card__delete-button"),this._ownerId!==this._userId&&(this._deleteButton.style.display="none"),this._likeCount=this._element.querySelector(".card__like-count"),this._likeCount.textContent=this._likes.length,this.isLiked()&&this.likeCard(this._likes),this._setEventListeners(),this._element}}const E=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}getInitialCards(){return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers}).then((e=>e.ok&&e.json())).catch((e=>console.log(e)))}getUserInfo(){return fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers}).then((e=>e.ok&&e.json())).catch((e=>console.log(e)))}setUserInfo(e,t){return fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers,method:"PATCH",body:JSON.stringify({name:e,about:t})}).then((e=>e.ok&&e.json())).catch((e=>console.log(e)))}setUserAvatar(e){return fetch("".concat(this._baseUrl,"/users/me/avatar"),{headers:this._headers,method:"PATCH",body:JSON.stringify({avatar:e})}).then((e=>e.ok&&e.json())).catch((e=>console.log(e)))}createCard(e){return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers,method:"POST",body:JSON.stringify(e)}).then((e=>e.ok&&e.json())).catch((e=>console.log(e)))}deleteCard(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e),{headers:this._headers,method:"DELETE"}).then((e=>e.ok&&e.json())).catch((e=>console.log(e)))}likeCard(e){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{headers:this._headers,method:"PUT"}).then((e=>e.ok&&e.json())).catch((e=>console.log(e)))}dislikeCard(e){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{headers:this._headers,method:"DELETE"}).then((e=>e.ok&&e.json())).catch((e=>console.log(e)))}}({baseUrl:"https://around.nomoreparties.co/v1/group-1",headers:{authorization:"2aae8d26-8315-4517-953d-28905b81f143","Content-Type":"application/json"}}),g=new class{constructor(e,t){let{renderer:s}=e;this._renderer=s,this._container=document.querySelector(t)}renderItems(e){e.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({renderer:e=>L(e)},".cards__list");let S;function L(e){const t=function(e){const t=new y(e,"#card-template",{handleCardClick:()=>{j.open(e.link,e.name)},handleDeleteCard:e=>{A.open(),A.setAction((()=>{E.deleteCard(e).then((e=>{console.log("card is deleted",e),t.removeCard()}))}))},handleLikeCard:e=>{t.isLiked()?E.dislikeCard(e).then((e=>{t.dislikeCard(e.likes),console.log("card is disliked",e)})):E.likeCard(e).then((e=>{t.likeCard(e.likes),console.log("card is liked",e)})),t.isLiked()}},S);return t.generateCard()}(e);g.addItem(t)}u.alt="User's Profile Pic",u.classList.add("profile__image"),Promise.all([E.getInitialCards(),E.getUserInfo()]).then((e=>{let[t,s]=e;S=s._id,g.renderItems(t),U.setUserInfo(s.name,s.about),p.prepend(u),U.setUserAvatar(u,s.avatar)}));const q=new k(s,r),I=new k(s,l),B=new k(s,_);q.enableValidation(),I.enableValidation(),B.enableValidation();const U=new class{constructor(e){let{nameSelector:t,jobSelector:s}=e;this._profileName=document.querySelector(t),this._profileJob=document.querySelector(s)}getUserInfo(){return{name:this._profileName.textContent,job:this._profileJob.textContent}}setUserInfo(e,t){this._profileName.textContent=e,this._profileJob.textContent=t}setUserAvatar(e,t){this._avatar=e,this._avatar.src=t}}({nameSelector:".profile__name",jobSelector:".profile__title",avatarSelector:".profile__image"}),w=new b(".popup_type_edit-profile",(e=>{m(i,"Saving..."),E.setUserInfo(e.name,e.title).then((e=>{m(i,"Saving"),U.setUserInfo(e.name,e.about),v(r,w)}))}));w.setEventListeners();const x=new b(".popup_type_add-place",(e=>{m(d,"Creating..."),E.createCard(e).then((e=>{L(e),m(d,"Create"),v(l,x)})),I.resetFormButton()}));x.setEventListeners();const j=new class extends C{constructor(e){super(e)}open(e,t){this._popupImage=this._popupElement.querySelector(".popup__image"),this._popupImage.src=e,this._popupImage.alt="A beautiful view of ".concat(t),this._popupElement.querySelector(".popup__caption").textContent=t,super.open()}}(".popup_type_image-prev");j.setEventListeners();const A=new class extends C{setAction(e){this._submitHandler=e}setEventListeners(){this._popupElement.addEventListener("submit",(e=>{e.preventDefault(),this._submitHandler(),this.close()})),super.setEventListeners()}}(".popup_type_delete-card");A.setEventListeners();const O=new b(".popup_type_avatar",(e=>{m(h,"Saving avatar..."),E.setUserAvatar(e.link).then((e=>{U.setUserAvatar(u,e.avatar),m(h,"Save"),v(_,O)}))}));O.setEventListeners(),e.addEventListener("click",(()=>{const e=U.getUserInfo();o.value=e.name,a.value=e.job,q.hideErrors(),q.enableButton(),w.open()})),t.addEventListener("click",(()=>{x.open(),I.hideErrors()})),c.addEventListener("click",(()=>{O.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,