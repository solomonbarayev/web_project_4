!function(){"use strict";const e=document.querySelector(".profile__edit-button"),t=document.querySelector(".profile__add-button"),s={inputSelector:".form__input",submitButtonSelector:".form__button",inactiveButtonClass:"form__button_disabled",inputErrorClass:"form__input_type_error",errorClass:"form__error_visible"},i=document.querySelector(".popup__form_type_profile"),r=document.querySelector(".popup__form_type_add-place"),n=document.querySelector(".profile__image-container"),o=document.querySelector(".popup__form_type_avatar");function a(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class l{constructor(e){a(this,"_handleEscClose",(e=>{"Escape"===e.key&&this.close()})),a(this,"_handleOverlayClose",(e=>{e.target.classList.contains("popup")&&this.close()})),this._popupElement=document.querySelector(e),this.close=this.close.bind(this)}open(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose),document.addEventListener("mousedown",this._handleOverlayClose)}close(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose),document.removeEventListener("mousedown",this._handleOverlayClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}_handleOverlayClose(e){e.target.classList.contains("popup")&&this.close()}setEventListeners(){this._popupElement.querySelector(".popup__close-button").addEventListener("click",this.close)}}class c extends l{constructor(e,t){var s,i;super(e),i=()=>{super.close(),this._formElement.reset()},(s="close")in this?Object.defineProperty(this,s,{value:i,enumerable:!0,configurable:!0,writable:!0}):this[s]=i,this._formElement=this._popupElement.querySelector(".popup__form"),this._submitHandler=t,this._inputList=[...this._formElement.querySelectorAll(".form__input")],this._submitButton=this._formElement.querySelector(".form__button"),this._submitButtonText=this._submitButton.textContent}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}setInputValues(e){this._inputList.forEach((t=>{t.value=e[t.name]}))}setEventListeners(){this._formElement.addEventListener("submit",(e=>{e.preventDefault(),this._submitHandler(this._getInputValues())})),super.setEventListeners()}renderLoading(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._submitButton.textContent=e?t:this._submitButtonText}}class h{constructor(e,t){this._form=t,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass}_showInputError(e){const t=this._form.querySelector(".".concat(e.id,"-error"));t.textContent=e.validationMessage,t.classList.add(this._errorClass),e.classList.add(this._inputErrorClass)}_hideInputError(e){const t=this._form.querySelector(".".concat(e.id,"-error"));t.textContent="",t.classList.remove(this._errorClass),e.classList.remove(this._inputErrorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInputs(){return this._inputList.some((e=>!e.validity.valid))}_disableButton(){this._button.disabled=!0,this._button.classList.add(this._inactiveButtonClass)}enableButton(){this._button.disabled=!1,this._button.classList.remove(this._inactiveButtonClass)}_toggleButton(){this._hasInvalidInputs()?this._disableButton():this.enableButton()}_setEventListeners(){this._inputList=[...this._form.querySelectorAll(this._inputSelector)],this._button=this._form.querySelector(this._submitButtonSelector),this._toggleButton(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButton()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>e.preventDefault())),this._setEventListeners()}resetFormButton(){this._disableButton()}hideErrors(){this._inputList.forEach((e=>{this._hideInputError(e)}))}}class _{constructor(e,t,s,i){let{handleCardClick:r,handleDeleteCard:n,handleLikeCard:o}=s;this._text=e.name,this._link=e.link,this._selector=t,this._handleCardClick=r,this._handleDeleteCard=n,this._handelLikeCard=o,this._id=e._id,this._userId=i,this._ownerId=e.owner._id,this._likes=e.likes}_getCloneFromTemplate(){return document.querySelector(this._selector).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._element.addEventListener("click",(e=>{e.target===this._likeButton&&this._handelLikeCard(this._id),e.target===this._deleteButton&&this._handleDeleteCard(this._id),e.target===this._image&&this._handleCardClick(e)}))}removeCard(){this._element.remove(),this._element=null}likeCard(e){this._likeButton.classList.add("card__like-button_active"),this._likes=e,this._likeCount.textContent=this._likes.length}dislikeCard(e){this._likeButton.classList.remove("card__like-button_active"),this._likes=e,this._likeCount.textContent=this._likes.length}isLiked(){return this._likes.some((e=>e._id===this._userId))}generateCard(){return this._element=this._getCloneFromTemplate(),this._image=this._element.querySelector(".card__image"),this._likeButton=this._element.querySelector(".card__like-button"),this._element.querySelector(".card__title").textContent=this._text,this._image.src=this._link,this._image.alt="A beautiful scene in ".concat(this._text),this._deleteButton=this._element.querySelector(".card__delete-button"),this._ownerId!==this._userId&&(this._deleteButton.style.display="none"),this._likeCount=this._element.querySelector(".card__like-count"),this._likeCount.textContent=this._likes.length,this.isLiked()&&this.likeCard(this._likes),this._setEventListeners(),this._element}}const d=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}_checkResponse(e){return e.ok?e.json():Promise.reject("Error ".concat(e.status))}getInitialCards(){return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers}).then(this._checkResponse)}getUserInfo(){return fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers}).then(this._checkResponse)}setUserInfo(e,t){return fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers,method:"PATCH",body:JSON.stringify({name:e,about:t})}).then(this._checkResponse)}setUserAvatar(e){return fetch("".concat(this._baseUrl,"/users/me/avatar"),{headers:this._headers,method:"PATCH",body:JSON.stringify({avatar:e})}).then(this._checkResponse)}createCard(e){return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers,method:"POST",body:JSON.stringify(e)}).then(this._checkResponse)}deleteCard(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e),{headers:this._headers,method:"DELETE"}).then(this._checkResponse)}likeCard(e){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{headers:this._headers,method:"PUT"}).then(this._checkResponse)}dislikeCard(e){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{headers:this._headers,method:"DELETE"}).then(this._checkResponse)}}({baseUrl:"https://around.nomoreparties.co/v1/group-1",headers:{authorization:"2aae8d26-8315-4517-953d-28905b81f143","Content-Type":"application/json"}}),u=new class{constructor(e,t){let{renderer:s}=e;this._renderer=s,this._container=document.querySelector(t)}renderItems(e){e.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({renderer:m},".cards__list");let p;function m(e){const t=function(e){const t=new _(e,"#card-template",{handleCardClick:()=>{g.open(e.link,e.name)},handleDeleteCard:e=>{y.open(),y.setAction((()=>{d.deleteCard(e).then((e=>{console.log("card is deleted",e),t.removeCard()})).then((()=>{console.log("server deleted card"),y.close()})).catch((e=>console.log(e)))}))},handleLikeCard:e=>{t.isLiked()?d.dislikeCard(e).then((e=>{t.dislikeCard(e.likes),console.log("card is disliked",e)})).catch((e=>console.log(e))):d.likeCard(e).then((e=>{t.likeCard(e.likes),console.log("card is liked",e)})).catch((e=>console.log(e)))}},p);return t.generateCard()}(e);u.addItem(t)}Promise.all([d.getInitialCards(),d.getUserInfo()]).then((e=>{let[t,s]=e;p=s._id,u.renderItems(t),f.setUserInfo(s.name,s.about),f.setUserAvatar(s.avatar)})).then((()=>f.setAvatarVisible())).catch((e=>console.log(e)));const v=new h(s,i),b=new h(s,r),C=new h(s,o);v.enableValidation(),b.enableValidation(),C.enableValidation();const f=new class{constructor(e){let{nameSelector:t,jobSelector:s,avatarSelector:i}=e;this._profileName=document.querySelector(t),this._profileJob=document.querySelector(s),this._avatar=document.querySelector(i),console.log(this._avatar)}getUserInfo(){return{name:this._profileName.textContent,title:this._profileJob.textContent}}setUserInfo(e,t){this._profileName.textContent=e,this._profileJob.textContent=t}setUserAvatar(e){this._avatar.src=e}setAvatarVisible(){this._avatar.style.visibility="visible"}}({nameSelector:".profile__name",jobSelector:".profile__title",avatarSelector:".profile__image"}),k=new c(".popup_type_edit-profile",(e=>{k.renderLoading(!0,"Saving..."),d.setUserInfo(e.name,e.title).then((e=>{f.setUserInfo(e.name,e.about),k.close()})).catch((e=>console.log(e))).finally((()=>k.renderLoading(!1)))}));k.setEventListeners();const E=new c(".popup_type_add-place",(e=>{E.renderLoading(!0,"Creating..."),d.createCard(e).then((e=>{m(e),E.close()})).catch((e=>console.log(e))).finally((()=>E.renderLoading(!1)))}));E.setEventListeners();const g=new class extends l{constructor(e){super(e),this._popupImage=this._popupElement.querySelector(".popup__image"),this._popupCaption=this._popupElement.querySelector(".popup__caption")}open(e,t){this._popupImage.src=e,this._popupImage.alt="A beautiful view of ".concat(t),this._popupCaption.textContent=t,super.open()}}(".popup_type_image-prev");g.setEventListeners();const y=new class extends l{setAction(e){this._submitHandler=e}setEventListeners(){this._popupElement.addEventListener("submit",(e=>{e.preventDefault(),this._submitHandler()})),super.setEventListeners()}}(".popup_type_delete-card");y.setEventListeners();const L=new c(".popup_type_avatar",(e=>{L.renderLoading(!0,"Saving avatar..."),d.setUserAvatar(e.link).then((e=>{f.setUserAvatar(e.avatar),L.close()})).catch((e=>console.log(e))).finally((()=>L.renderLoading(!1)))}));L.setEventListeners(),e.addEventListener("click",(()=>{const e=f.getUserInfo();k.setInputValues(e),v.hideErrors(),v.enableButton(),k.open()})),t.addEventListener("click",(()=>{b.resetFormButton(),E.open(),b.hideErrors()})),n.addEventListener("click",(()=>{C.resetFormButton(),L.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,